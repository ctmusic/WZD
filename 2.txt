	在有些特定的情况下，我们需要在类外访问类的私有成员，这样往往为了满足这一目的把此类设为公有成员，这样大大降低
了数据的安全性与可保护性；再或者设置一些访问私有数据函数做接口，使得私有成员通过公共接口而暴露。
友元机制的引入，虽然破坏了了类的封装性和隐蔽性，但极大程度地在做到在保护数据的通知提高接口的灵活性。一个类无论是
它的友元类还是友元函数，其都由该类决定，这便是提高接口的灵活性的体现。
	友元函数：在类内部，只能申明函数原型，不能定义函数体，不可被继承。
    友元类：友类的每个成员都可以访问另一个类中的保护成员和私有成员。
