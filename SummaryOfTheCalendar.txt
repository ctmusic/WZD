

                     总结 C++万年历 


1:类的使用极大地保护了类内部的数据，对于外部而言输入数据
  只能通过公共接口，并且只能得到一个或多个输出。但是中间过程
  是无法得知的

2:做到了对事物的总结，把属性和行为合为一体，而不是分散的。

3:类之间的函数相互间无影响，保证了各干各的活，数据不会有相互影响，也省去了 变量/函数 名多而杂的问题
  同时由于其保密性，本类中的变量基本不会被其他函数修改，有效的帮助了开发者在变量命名和使用时
  的问题(如全局区变量，所有函数都可访问，当一个函数调用后容易产生无法预测的结果影响下一个函数使用)
  而且全局变量用多了会很麻烦并且有时候只有少数函数需要同一个变量的时候就显得不值了而用类的静态变量
  很好的解决这个问题，只有本类间通用其他的无法访问修改也不怕重名

4:类中各成员定义没有先后顺序之分并且可以根据情况控制各自的能见度(对外公开还是自己藏着)

5:因为类中函数集中在一起使用时直接用一个接口就可以，不再需要调用全部的函数省去了麻烦和出错率

6:代码非常简洁直观呈现高度集中化(一类功能集中在一起，看起来很直观，尤其在代码量非常大的时候优势非常明显)。

7:类的自动隐藏功能(当 函数/变量 名与某一类的相同时，可以自动隐藏)可以很大程度上缩短思考时间(可以使用同一个变量名)
  省去了临时变量或者替代变量的麻烦而且非常容易出错
	
8:重载技术配合着友元类的使用 可以定义一个统一的功能而实现不同的功能的类，使用时只需给出不同类型的参数即可不需要再
  根据不同的参数类型对应设计不同的函数，从而就像模板一样在需要修改功能的啥时候只需修改一个而不用吧每一个函数都
  加以改进。

9:当需要对类中功能进行扩充或修改(这点比较坑)时，可以直接派生新类来实现。而且通过集成(继承)基类的功能可以高效的开发
  新功能不用重头考虑所需的东西。