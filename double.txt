多继承中的二义性问题。
同名二义性（倒三角继承）：基类与基类之间基类与派生类之间成员同名时，出现成员访问的不确定性。
解决方法：区域限定符（::），同名覆盖。
例：son多继承于father和grandpa，调用其中的fun函数
		son.faher::fun();
		

路基二义性（菱形继承）：两派生类继承同一父类，在这两类的共同派生类调用最远基类的函数时出现二义性。
解决方法： 引入虚基类，为最远派生类提供唯一的基类成员，
例：
	中间继承时，加入virtual关键字：B、C继承于A，D继承于B、C。
		class B:virtual public A{
		};
		class C:virtual public A{
		};

重载时：1.只改变返回类型；
		2.参数的传值改为引用；
		3.参数有默认值。
	三种情况会因产生二义性而编译错误。因此在重载时因注意格式规范。
		
		